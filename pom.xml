<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~ Copyright (c) 2017 OBiBa. All rights reserved.
  ~
  ~ This program and the accompanying materials
  ~ are made available under the terms of the GNU Public License v3.0.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.obiba.mica</groupId>
    <artifactId>mica</artifactId>
    <version>2.2-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>mica-python-client</artifactId>

  <name>mica-python-client</name>
  <description>Mica Python Client Module</description>

  <dependencies>
    <dependency>
      <groupId>org.obiba.mica</groupId>
      <artifactId>mica-web-model</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <finalName>mica-python_${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/main/assembly/python-package.xml</descriptor>
          </descriptors>
          <filters />
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>unzip-package</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <!-- Unzip package -->
                <property name="python.dist.path" value="${basedir}/target" />
                <property name="python.package.name" value="${project.name}-${project.version}.tar.gz" />
                <unzip src="${basedir}/target/mica-python_${project.version}.zip" dest="${python.dist.path}" />
                <copy todir="${python.dist.path}/mica-python">
                  <fileset dir="${basedir}/dist/python">
                    <include name="*.*" />
                  </fileset>
                  <filterset>
                    <filter token="project.name" value="${project.name}" />
                    <filter token="project.version" value="${project.version}" />
                    <filter token="project.description" value="${project.description}" />
                    <filter token="project.download.url" value="http://download.obiba.org/mica/${obiba.deploy.dir}/${python.package.name}" />
                  </filterset>
                </copy>
                <exec dir="${python.dist.path}/mica-python" executable="python" failonerror="true">
                  <arg line="${python.dist.path}/mica-python/setup.py" />
                  <arg line="sdist" />
                  <arg line="--formats=gztar,zip" />
                  <arg line="--dist-dir=${basedir}/target" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- A profile for the builds performed by the continuous integration server -->
      <id>ci-build</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>make-rpm</id>
                <phase>package</phase>
                <goals>
                  <goal>attached-rpm</goal>
                </goals>
                <configuration>
                  <name>mica-python-client</name>
                  <version>${project.version}</version>
                  <group>Applications/Engineering</group>
                  <packager>OBiBa</packager>
                  <changelogFile>/usr/share/doc/mica-python-client/changelog</changelogFile>
                  <targetOS>Linux</targetOS>
                  <requires>
                    <require>python &gt;= 2.7</require>
                    <require>python-pycurl</require>
                    <require>protobuf-python &gt;= 2.5</require>
                  </requires>

                  <mappings>

                    <mapping>
                      <directory>/usr/bin</directory>
                      <directoryIncluded>false</directoryIncluded>
                      <filemode>755</filemode>
                      <sources>
                        <source>
                          <location>${basedir}/target/mica-python/bin/scripts</location>
                          <includes>
                            <include>mica</include>
                          </includes>
                        </source>
                      </sources>
                    </mapping>

                    <mapping>
                      <directory>/usr/share/pyshared/mica</directory>
                      <filemode>755</filemode>
                      <sources>
                        <source>
                          <location>${basedir}/target/mica-python/bin/mica</location>
                          <includes>
                            <include>**/*</include>
                          </includes>
                        </source>
                      </sources>
                    </mapping>

                    <mapping>
                      <directory>/usr/share/doc/mica-python-client</directory>
                      <filemode>744</filemode>
                      <documentation>true</documentation>
                      <sources>
                        <source>
                          <location>dist/debian/changelog</location>
                        </source>
                        <source>
                          <location>dist/rpm/copyright</location>
                        </source>
                      </sources>
                    </mapping>
                  </mappings>
                  <postinstallScriptlet>
                    <scriptFile>dist/rpm/scripts/postinstall.sh</scriptFile>
                    <fileEncoding>utf-8</fileEncoding>
                  </postinstallScriptlet>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>make-deb</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property name="target.dir" value="${basedir}/target" />
                    <property name="deb.dir" value="${target.dir}/deb" />
                    <property name="deb.version" value="${project.version}-b${buildNumber}" />
                    <unzip src="${target.dir}/mica-python_${project.version}.zip" dest="${target.dir}" />
                    <!-- delete junk python bytecode -->
                    <delete>
                      <fileset dir="${target.dir}/mica-python" includes="**/*.pyc" />
                    </delete>
                    <tstamp>
                      <!-- http://www.debian.org/doc/debian-policy/ch-source.html -->
                      <format property="deb.date" pattern="EEE, d MMM yyyy HH:mm:ss Z" locale="en" />
                    </tstamp>
                    <copy todir="${deb.dir}/debian">
                      <fileset dir="${basedir}/dist/debian" />
                      <filterset>
                        <filter token="project.version" value="${deb.version}" />
                        <filter token="date" value="${deb.date}" />
                      </filterset>
                    </copy>
                    <mkdir dir="${deb.dir}/usr/share/pyshared" />
                    <mkdir dir="${deb.dir}/usr/bin" />
                    <move todir="${deb.dir}/usr/bin">
                      <fileset dir="${target.dir}/mica-python/bin/scripts" includes="mica" />
                    </move>
                    <move todir="${deb.dir}/usr/share/pyshared/mica">
                      <fileset dir="${target.dir}/mica-python/bin/mica" includes="**/*" />
                    </move>
                    <exec executable="debuild" dir="${deb.dir}" failonerror="true" osfamily="unix">
                      <arg value="-b" />
                    </exec>
                    <move todir="${basedir}/target">
                      <fileset dir="${deb.dir}">
                        <include name="*.deb" />
                      </fileset>
                    </move>
                    <delete dir="${deb.dir}" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>deploy-deb</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property name="deb.package.name" value="${project.name}_${project.version}-b${buildNumber}_all.deb" />
                    <!-- Deploy deb file in deb repo -->
                    <copy file="target/${deb.package.name}" todir="${obiba.deb.dir}/${obiba.deploy.dir}" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>deploy-package</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property name="python.dist.path" value="${basedir}/target" />
                    <property name="python.package.name" value="${project.name}-${project.version}.tar.gz" />
                    <!-- Deploy Python package file in download repo -->
                    <copy file="target/${python.package.name}" todir="${obiba.download.dir}/mica/${obiba.deploy.dir}" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>deploy-rpm</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- Deploy rpm file in rpm repo -->
                    <copy todir="${obiba.rpm.dir}/${obiba.deploy.dir}">
                      <fileset dir="target/rpm/mica-python-client/RPMS/noarch" />
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
