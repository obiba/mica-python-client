<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~ Copyright (c) 2018 OBiBa. All rights reserved.
  ~
  ~ This program and the accompanying materials
  ~ are made available under the terms of the GNU Public License v3.0.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.obiba.mica</groupId>
  <artifactId>mica-python-client</artifactId>
  <name>mica-python-client</name>
  <description>Mica Python Client Module</description>
  <version>3.4-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <mica.version>3.4-SNAPSHOT</mica.version>

    <!-- maven plugins -->
    <github-release-plugin.version>1.2.0</github-release-plugin.version>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <maven-buildnumber-plugin.version>1.2</maven-buildnumber-plugin.version>
    <maven-dependency-plugin.version>3.1.0</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
    <maven-release-plugin.version>2.5.2</maven-release-plugin.version>
    <rpm-maven-plugin.version>2.1.4</rpm-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.obiba.mica</groupId>
        <artifactId>mica-web-model</artifactId>
        <version>${mica.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.obiba.commons</groupId>
            <artifactId>obiba-mongodb</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.obiba.mica</groupId>
            <artifactId>mica-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.obiba.mica</groupId>
      <artifactId>mica-web-model</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <releaseProfiles>release</releaseProfiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>rpm-maven-plugin</artifactId>
          <version>${rpm-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>de.jutzig</groupId>
          <artifactId>github-release-plugin</artifactId>
          <version>${github-release-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Unzip shared resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.obiba.mica</groupId>
                  <artifactId>mica-web-model</artifactId>
                  <version>${mica.version}</version>
                  <classifier>python</classifier>
                  <overWrite>true</overWrite>
                  <type>zip</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>${maven-buildnumber-plugin.version}</version>
        <executions>
          <execution>
            <id>createBuildNumber</id>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <format>{0,date,yyyyMMddHHmmss}</format>
              <items>
                <item>timestamp</item>
              </items>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <finalName>mica-python_${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/main/assembly/package.xml</descriptor>
          </descriptors>
          <filters />
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>unzip-package</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <!-- Unzip package -->
                <property name="python.dist.path" value="${basedir}/target" />
                <property name="python.package.name" value="${project.name}-${project.version}.tar.gz" />
                <unzip src="${basedir}/target/mica-python_${project.version}.zip" dest="${python.dist.path}" />
                <copy todir="${python.dist.path}/mica-python">
                  <fileset dir="${basedir}/dist/python">
                    <include name="*.*" />
                  </fileset>
                  <filterset>
                    <filter token="project.name" value="${project.name}" />
                    <filter token="project.version" value="${project.version}" />
                    <filter token="project.description" value="${project.description}" />
                    <filter token="project.download.url" value="https://github.com/obiba/${project.name}/releases/download/${project.version}/${python.package.name}" />
                  </filterset>
                </copy>
                <exec dir="${python.dist.path}/mica-python" executable="python" failonerror="true">
                  <arg line="${python.dist.path}/mica-python/setup.py" />
                  <arg line="sdist" />
                  <arg line="--formats=gztar,zip" />
                  <arg line="--dist-dir=${basedir}/target" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Disable default deployer. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- A profile for the builds performed by the continuous integration server -->
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>make-rpm</id>
                <phase>package</phase>
                <goals>
                  <goal>attached-rpm</goal>
                </goals>
                <configuration>
                  <name>mica-python-client</name>
                  <version>${project.version}</version>
                  <group>Applications/Engineering</group>
                  <packager>OBiBa</packager>
                  <changelogFile>/usr/share/doc/mica-python-client/changelog</changelogFile>
                  <targetOS>Linux</targetOS>
                  <requires>
                    <require>python &gt;= 2.7</require>
                    <require>python-pycurl</require>
                    <require>protobuf-python &gt;= 2.5</require>
                  </requires>

                  <mappings>

                    <mapping>
                      <directory>/usr/bin</directory>
                      <directoryIncluded>false</directoryIncluded>
                      <filemode>755</filemode>
                      <sources>
                        <source>
                          <location>${basedir}/target/mica-python/bin/scripts</location>
                          <includes>
                            <include>mica</include>
                          </includes>
                        </source>
                      </sources>
                    </mapping>

                    <mapping>
                      <directory>/usr/share/pyshared/mica</directory>
                      <filemode>755</filemode>
                      <sources>
                        <source>
                          <location>${basedir}/target/mica-python/bin/mica</location>
                          <includes>
                            <include>**/*</include>
                          </includes>
                        </source>
                      </sources>
                    </mapping>

                    <mapping>
                      <directory>/usr/share/doc/mica-python-client</directory>
                      <filemode>744</filemode>
                      <documentation>true</documentation>
                      <sources>
                        <source>
                          <location>dist/debian/changelog</location>
                        </source>
                        <source>
                          <location>dist/rpm/copyright</location>
                        </source>
                      </sources>
                    </mapping>
                  </mappings>
                  <postinstallScriptlet>
                    <scriptFile>dist/rpm/scripts/postinstall.sh</scriptFile>
                    <fileEncoding>utf-8</fileEncoding>
                  </postinstallScriptlet>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>make-deb</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <property name="target.dir" value="${basedir}/target" />
                    <property name="deb.dir" value="${target.dir}/deb" />
                    <property name="deb.version" value="${project.version}-b${buildNumber}" />
                    <unzip src="${target.dir}/mica-python_${project.version}.zip" dest="${target.dir}" />
                    <!-- delete junk python bytecode -->
                    <delete>
                      <fileset dir="${target.dir}/mica-python" includes="**/*.pyc" />
                    </delete>
                    <tstamp>
                      <!-- http://www.debian.org/doc/debian-policy/ch-source.html -->
                      <format property="deb.date" pattern="EEE, d MMM yyyy HH:mm:ss Z" locale="en" />
                    </tstamp>
                    <copy todir="${deb.dir}/debian">
                      <fileset dir="${basedir}/dist/debian" />
                      <filterset>
                        <filter token="project.version" value="${deb.version}" />
                        <filter token="date" value="${deb.date}" />
                      </filterset>
                    </copy>
                    <mkdir dir="${deb.dir}/usr/share/pyshared" />
                    <mkdir dir="${deb.dir}/usr/bin" />
                    <copy todir="${deb.dir}/usr/bin">
                      <fileset dir="${target.dir}/mica-python/bin/scripts" includes="mica" />
                    </copy>
                    <copy todir="${deb.dir}/usr/share/pyshared/mica">
                      <fileset dir="${target.dir}/mica-python/bin/mica" includes="**/*" />
                    </copy>
                    <exec executable="debuild" dir="${deb.dir}" failonerror="true" osfamily="unix">
                      <arg value="-b" />
                      <arg value="-i" />
                      <arg value="-us" />
                      <arg value="-uc" />
                    </exec>
                    <move todir="${basedir}/target">
                      <fileset dir="${deb.dir}">
                        <include name="*.deb" />
                      </fileset>
                    </move>
                    <delete dir="${deb.dir}" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Upload packages to github release -->
          <plugin>
            <groupId>de.jutzig</groupId>
            <artifactId>github-release-plugin</artifactId>
            <executions>
              <execution>
                <id>make-release</id>
                <phase>deploy</phase>
                <goals>
                  <goal>release</goal>
                </goals>
                <configuration>
                  <releaseName>${project.version}</releaseName>
                  <tag>${project.version}</tag>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.tar.gz</include>
                        <include>*.deb</include>
                      </includes>
                    </fileSet>
                    <fileSet>
                      <directory>${project.build.directory}/rpm/${project.name}/RPMS/noarch</directory>
                      <includes>
                        <include>*.rpm</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


  <repositories>
    <repository>
      <id>obiba-releases</id>
      <name>Obiba Maven Releases Repository</name>
      <url>https://dl.bintray.com/obiba/maven</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>obiba-snapshots</id>
      <name>Obiba Maven Snapshots Repository</name>
      <url>https://obiba.jfrog.io/obiba/libs-snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>obiba-bintray</id>
      <url>https://api.bintray.com/obiba/maven/</url>
    </repository>
    <snapshotRepository>
      <id>obiba-artifactory</id>
      <url>https://obiba.jfrog.io/obiba/libs-snapshot</url>
    </snapshotRepository>
  </distributionManagement>

  <scm>
    <connection>scm:git:https://github.com/obiba/mica-python-client.git</connection>
    <developerConnection>scm:git:https://github.com/obiba/mica-python-client.git</developerConnection>
    <url>https://github.com/obiba/mica-python-client</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/obiba/mica-python-client/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Travis</system>
    <url>https://travis-ci.org/obiba/mica-python-client</url>
  </ciManagement>

  <mailingLists>
    <mailingList>
      <name>OBiBa Users</name>
      <post>obiba-users@googlegroups.com</post>
      <archive>https://groups.google.com/forum/?fromgroups#!forum/obiba-users</archive>
    </mailingList>
  </mailingLists>

  <licenses>
    <license>
      <name>GNU Public License version 3</name>
      <url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
    </license>
  </licenses>

</project>
