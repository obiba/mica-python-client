#! /usr/bin/env python
#
import argparse

import mica.file
import mica.rest
import mica.import_zip
import mica.perm_network
import mica.perm_study
import mica.perm_study_dataset
import mica.perm_harmonization_dataset

def add_mica_arguments(parser):
    """
    Add Mica access arguments
    """
    parser.add_argument('--mica', '-mk', required=False, help='Mica server base url')
    parser.add_argument('--user', '-u', required=False, help='User name')
    parser.add_argument('--password', '-p', required=False, help='User password')
    parser.add_argument('--verbose', '-v', action='store_true', help='Verbose output')


def add_subcommand(name, help, add_args_func, default_func):
    """
    Make a sub-parser, add default arguments to it, add sub-command arguments and set the sub-command callback function.
    """
    subparser = subparsers.add_parser(name, help=help)
    add_mica_arguments(subparser)
    add_args_func(subparser)
    subparser.set_defaults(func=default_func)


# Parse arguments
parser = argparse.ArgumentParser(description='Mica command line.')
subparsers = parser.add_subparsers(title='sub-commands',
                                   help='Available sub-commands. Use --help option on the sub-command '
                                        'for more details.')

# Add subcommands
add_subcommand('import-zip', 'Import data from zip file(s) that have been extracted from old Mica',
               mica.import_zip.add_arguments, mica.import_zip.do_command)
add_subcommand('file', 'Mica file system actions, for advanced users.', mica.file.add_arguments,
               mica.file.do_command)
add_subcommand('perm-network', 'Apply permission on a network.',
               mica.perm_network.add_arguments, mica.perm_network.do_command)
add_subcommand('perm-study', 'Apply permission on a study.',
               mica.perm_study.add_arguments, mica.perm_study.do_command)
add_subcommand('perm-study-dataset', 'Apply permission on a study dataset.',
               mica.perm_study_dataset.add_arguments, mica.perm_study_dataset.do_command)
add_subcommand('perm-harmonization-dataset', 'Apply permission on a harmonization dataset.',
               mica.perm_harmonization_dataset.add_arguments, mica.perm_harmonization_dataset.do_command)
add_subcommand('rest', 'Request directly the Mica REST API, for advanced users.', mica.rest.add_arguments,
               mica.rest.do_command)

# Execute selected command
args = parser.parse_args()
args.func(args)
